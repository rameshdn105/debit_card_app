name: CICD pipeline for debit card
on:
  push:
    branches:
        - master
  workflow_call:
    inputs:
      db_database_name: 
        required: true
        type: string
        description: DB name
jobs:
  build: 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: generate version
      run: |
        commitid=$(git rev-parse --short HEAD)
        semanticVersion="1.0.0"
        export Ver=$semanticVersion-$commitid
        echo "VERSION=$semanticVersion-$commitid" >> $GITHUB_ENV
        echo "$Ver"
    
    - name: Cache SonarQube dependencies
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar-${{ hashFiles('**/*.java') }}
        restore-keys: |
          ${{ runner.os }}-sonar-
        
    - name: Build with maven
      env:
        VERSION: 1.0.0
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_NAME: ${{ inputs.db_database_name }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASS: ${{ secrets.DB_PASS }}
      run: |
        cd project_code
        mvn clean install
        cd target
        ls
        echo "${{ inputs.db_database_name }}"

    - name: Upload artifactory to GithubWorkspace
      uses: actions/upload-artifact@v3
      with:
        name: DebitCardWar-${{ env.VERSION }}
        path: |
          ${{ GITHUB.WORKSPACE }}/project_code/target/**.war

    - name: Upload Build Artifact to JFrogArtifactory
      run: |
          curl -u ${{ secrets.JFROG_USER }}:${{ secrets.JFROG_PASS }} -X PUT "http://18.116.72.114:8081/artifactory/generic-local/Ramesh/debitcard/debitcardapp.${{ env.VERSION }}.war" -T ${{ github.workspace }}/project_code/target/*.war
    
# Install Docker on the runner (GitHub Actions Ubuntu runners do not have Docker by default)
    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo systemctl start docker
        sudo systemctl enable docker
        docker --version  # Verify Docker is installed

    # - name: Build Docker Image
    #   run: |
    #     docker build -t debitcardapp:${{ env.VERSION }} .










    # # Explicitly set JAVA_HOME to Java 17 before SonarQube Scan
    # - name: Set JAVA_HOME to Java 17 explicitly
    #   run: echo "JAVA_HOME=$(which java | sed 's:/bin/java::')" >> $GITHUB_ENV

    # - name: Check Java Version
    #   run: java -version

    # - name: SonarQube Scan
    #   uses: SonarSource/sonarcloud-github-action@v1
    #   with:
    #     projectBaseDir: .
    #     args: >
    #       -Dsonar.organization=debicard_App
    #       -Dsonar.projectKey=debicard_App
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  
    # - name: SonarQube Scan Results
    #   run: |
    #     echo "SonarQube analysis complete."

